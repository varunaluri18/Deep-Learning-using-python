import kearas
from keras.models import Sequential
from keras.layers import Dense
from keras.layers import LeakyReLU,ELU
from keras.layers import Dropout


classifier = sequentoal()
#Adding thr input layer and the first hidden layer 
classifier.add(Dense(units =6 ,kernal_initializer='he_uniform/he_normal',activation='relu',input_dim=11))
classifier.add(Dropout(0.3))

#Adding thr second hidden layer 
classifier.add(Dense(units =6 ,kernal_initiazler='he_uniform' ,activation='relu'))
classifier.add(Dropout(0.4))

#Adding thr output layer 
classifier.add(units =1,kernal_initiazler='glorot_uniform',activation='relu'))

#Compiling the ANN
classifier.compile(optmizer='Adamax',loss='binary_crossentropy,'metrics=['accuracy'])

#fitting the ANN to the Training set
model_history=classifier.fit(X_train ,y_train ,validation_split =0.33,batch_size =10,nb_epoch =100)

print(model_history.history.keys())

#summarize history for accuracy
plt.plot(model_history.history['acc'])
plt.plot(model_history.history['val_acc'])
plt.title('model accuracy')
plt.ylabel('accuracy')
plt.xlabel('epoch')
plt.legend(['train','test'],loc='upper left')
plt.show()

#predict the test set results
y_pred=classifier.predict(X_test)
y_pred=(y_pred >0.5)

#Making confusion matrix and accuracy
from sklearn.metrics import confusion_matrix, accuracy_score
cm=confusion_matrix(y_test,y_pred)
ac=accuracy-score(y_pred,y_pred)
